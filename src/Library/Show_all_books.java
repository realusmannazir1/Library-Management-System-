/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Library;

/**
 *
 * @author Zakir
 */
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
//import net.proteanit.sql.DbUtils;
public class Show_all_books extends javax.swing.JFrame {

    ConnectionTest zak = new ConnectionTest();
   
               String url=zak.url;
               String user=zak.user;
             String passs=zak.password;
    public Show_all_books() {
        initComponents();
         try{
             
       
             
            Connection con = DriverManager.getConnection(url, user, passs);
            Statement st = con.createStatement();
           ResultSet rsa = st.executeQuery("SELECT book_id,book_name,author,edition,quantity FROM books");
         std_table.setModel(DbUtils.resultSetToTableModel(rsa));
           
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);

        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        search_botton = new javax.swing.JButton();
        refreshbutton = new javax.swing.JButton();
        search_field = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        std_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label1.setBackground(new java.awt.Color(0, 0, 0,0));
        label1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 255, 255));
        label1.setText("Search A Book By (ID OR Name)");
        getContentPane().add(label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 350, 30));
        label1.getAccessibleContext().setAccessibleName("Search Student By (ID OR Name)");

        search_botton.setText("search");
        search_botton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_bottonActionPerformed(evt);
            }
        });
        getContentPane().add(search_botton, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, 160, 30));

        refreshbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon2/OIP (1).jpeg"))); // NOI18N
        refreshbutton.setText("Refresh");
        refreshbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(refreshbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 40, 160, -1));

        search_field.setBackground(new java.awt.Color(102, 102, 102));
        search_field.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        search_field.setForeground(new java.awt.Color(255, 255, 255));
        search_field.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        search_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_fieldActionPerformed(evt);
            }
        });
        getContentPane().add(search_field, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 330, 30));

        jLabel3.setBackground(new java.awt.Color(0, 51, 102));
        jLabel3.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("                                                    All Available Books");
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 900, 30));

        std_table.setBackground(new java.awt.Color(0, 51, 102));
        std_table.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        std_table.setForeground(new java.awt.Color(255, 255, 255));
        std_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book D", "Book Name", "Author", "Edition", "Quantity", "CoverImage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Byte.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        std_table.setGridColor(new java.awt.Color(255, 255, 255));
        std_table.setSelectionBackground(new java.awt.Color(0, 0, 0));
        std_table.setShowGrid(true);
        jScrollPane1.setViewportView(std_table);
        if (std_table.getColumnModel().getColumnCount() > 0) {
            std_table.getColumnModel().getColumn(5).setPreferredWidth(100);
            std_table.getColumnModel().getColumn(5).setHeaderValue("CoverImage");
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 900, 500));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0,144));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void search_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_fieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_search_fieldActionPerformed

    private void search_bottonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_bottonActionPerformed
      
        DefaultTableModel model = (DefaultTableModel) std_table.getModel();
            model.setRowCount(0);
        String search=search_field.getText();
        try {
            try (Connection con = DriverManager.getConnection(url, user, passs)) {
                Statement st = con.createStatement();
                String query = "SELECT * FROM books WHERE book_name LIKE '" + search + "%' OR book_id = '" + search + "'";
                ResultSet rs = st.executeQuery(query);
                
                
                std_table.setModel(DbUtils.resultSetToTableModel(rs));
            }
    
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
}

    }//GEN-LAST:event_search_bottonActionPerformed

    private void refreshbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshbuttonActionPerformed

            try{
             

            DefaultTableModel model = (DefaultTableModel) std_table.getModel();
            model.setRowCount(0);

            Connection con = DriverManager.getConnection(url,user, passs);
            Statement st = con.createStatement();
            ResultSet rsa = st.executeQuery("SELECT std_id,name,department,semister FROM members");
            std_table.setModel(DbUtils.resultSetToTableModel(rsa));
           
        }
            catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_refreshbuttonActionPerformed

    
    public static void main(String args[]) {
       
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Show_all_books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Show_all_books().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private javax.swing.JButton refreshbutton;
    private javax.swing.JButton search_botton;
    private javax.swing.JTextField search_field;
    private javax.swing.JTable std_table;
    // End of variables declaration//GEN-END:variables

    private static class DbUtils {

        private static TableModel resultSetToTableModel(ResultSet rsa) {
            throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        }

        public DbUtils() {
        }
    }
}
